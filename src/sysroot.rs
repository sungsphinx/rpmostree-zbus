//! # D-Bus interface proxy for: `org.projectatomic.rpmostree1.Sysroot`
//!
//! This code was generated by `zbus-xmlgen` `4.1.0` from D-Bus introspection data.
//! Source: `org.projectatomic.rpmostree1.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the [Writing a client proxy] section of the zbus
//! documentation.
//!
//!
//! [Writing a client proxy]: https://dbus2.github.io/zbus/client.html
//! [D-Bus standard interfaces]: https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces,
use zbus::proxy;
#[proxy(
    interface = "org.projectatomic.rpmostree1.Sysroot",
    assume_defaults = true
)]
trait Sysroot {
    /// GetOS method
    #[zbus(name = "GetOS")]
    fn get_os(&self, name: &str) -> zbus::Result<zbus::zvariant::OwnedObjectPath>;

    /// RegisterClient method
    fn register_client(
        &self,
        options: std::collections::HashMap<&str, &zbus::zvariant::Value<'_>>,
    ) -> zbus::Result<()>;

    /// Reload method
    fn reload(&self) -> zbus::Result<()>;

    /// ReloadConfig method
    fn reload_config(&self) -> zbus::Result<()>;

    /// UnregisterClient method
    fn unregister_client(
        &self,
        options: std::collections::HashMap<&str, &zbus::zvariant::Value<'_>>,
    ) -> zbus::Result<()>;

    /// ActiveTransaction property
    #[zbus(property)]
    fn active_transaction(&self) -> zbus::Result<(String, String, String)>;

    /// ActiveTransactionPath property
    #[zbus(property)]
    fn active_transaction_path(&self) -> zbus::Result<String>;

    /// AutomaticUpdatePolicy property
    #[zbus(property)]
    fn automatic_update_policy(&self) -> zbus::Result<String>;

    /// Booted property
    #[zbus(property)]
    fn booted(&self) -> zbus::Result<zbus::zvariant::OwnedObjectPath>;

    /// Deployments property
    #[zbus(property)]
    fn deployments(
        &self,
    ) -> zbus::Result<Vec<std::collections::HashMap<String, zbus::zvariant::OwnedValue>>>;

    /// Path property
    #[zbus(property)]
    fn path(&self) -> zbus::Result<String>;
}

//! # D-Bus interface proxy for: `org.projectatomic.rpmostree1.OSExperimental`
//!
//! This code was generated by `zbus-xmlgen` `4.1.0` from D-Bus introspection data.
//! Source: `org.projectatomic.rpmostree1.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the [Writing a client proxy] section of the zbus
//! documentation.
//!
//!
//! [Writing a client proxy]: https://dbus2.github.io/zbus/client.html
//! [D-Bus standard interfaces]: https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces,
use zbus::proxy;
#[proxy(
    interface = "org.projectatomic.rpmostree1.OSExperimental",
    assume_defaults = true
)]
trait OSExperimental {
    /// DownloadPackages method
    fn download_packages(&self, queries: &[&str], source: &str) -> zbus::Result<()>;

    /// LiveFs method
    fn live_fs(
        &self,
        options: std::collections::HashMap<&str, &zbus::zvariant::Value<'_>>,
    ) -> zbus::Result<String>;

    /// Moo method
    fn moo(&self, utf8: bool) -> zbus::Result<String>;
}
